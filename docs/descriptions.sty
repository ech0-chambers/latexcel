\ProvidesPackage{descriptions}[2023/12/03 v1.0b typesetting descriptions]

\RequirePackage{xcolor}
\RequirePackage{environ}
\RequirePackage{tikz}
\usetikzlibrary{calc, positioning, tikzmark}
\RequirePackage{longtable}


\newdimen\singlelineheight
\setlength\singlelineheight{1em}

\AtBeginDocument{
    \setlength\singlelineheight{\baselineskip}
}


\ExplSyntaxOn 

\seq_new:N \g_descriptions_seq
\int_new:N \g_descriptions_num_rows_int
\newdimen\definitionssecondcolumnlength
\newdimen\definitionsfirstcolumnlength

\keys_define:nn {descriptions} {
    width .dim_set:N = \definitionsfirstcolumnlength,
    width .initial:n = 1in,
    pauses .bool_set:N = \l_descriptions_pauses_bool,
    pauses .initial:n = false,
    pauses .default:n = true,
    item~style .code:n = \def\definitionsitemstyle{#1},
    subitem~style .code:n = \def\definitionssubitemstyle{#1},
    item~style .initial:n = \bfseries,
    subitem~style .initial:n = \footnotesize,
    array~stretch .fp_set:N = \l_descriptions_array_stretch_fp,
    array~stretch .initial:n = {1.0},
    divider~style .tl_set:N = \l_descriptions_divider_style_tl,
    divider~style .initial:n = {},
}

\newcommand{\descriptionsset}[1]{
    \keys_set:nn {descriptions} {#1}
}

\NewEnviron{descriptions}[1][]{
    \group_begin:
    \keys_set:nn {descriptions} {#1}
    \definitionssecondcolumnlength=\textwidth
    % \def\definitionsfirstcolumnlength{1in}
    \let\oldarraystretch\arraystretch
    \renewcommand{\arraystretch}{\fp_to_decimal:N \l_descriptions_array_stretch_fp}
    \addtolength{\definitionssecondcolumnlength}{-\definitionsfirstcolumnlength}
    \addtolength{\definitionssecondcolumnlength}{-2\tabcolsep}
    \addtolength{\definitionssecondcolumnlength}{-\columnsep}
    \addtolength{\definitionssecondcolumnlength}{-\fboxsep}
    \addtolength{\definitionssecondcolumnlength}{-\arrayrulewidth}
    \seq_set_split:NnV \g_descriptions_seq {\\} \BODY
    \int_gset:Nn \g_descriptions_num_rows_int {\seq_count:N \g_descriptions_seq}
    % \seq_show:N \l_tmpa_seq
    \par
    \noindent
    \begin{longtable}{rl}
        \seq_map_indexed_function:NN \g_descriptions_seq \parse_descriptions_line:nn
    \end{longtable}     
    \let\arraystretch\oldarraystretch   
    \group_end:
}

\seq_new:N \l_line_seq
\tl_new:N \g_descriptions_item_tl
\tl_new:N \g_descriptions_description_tl
\tl_new:N \g_descriptions_subitem_tl
\dim_new:N \g_descriptions_item_height_dim

\cs_new_protected:Nn \parse_descriptions_line:nn {
    \tl_if_empty:nF { #2 }
    {
        \seq_set_split:Nnn \l_tmpa_seq { | } { #2 }
        \seq_gpop_left:NN \l_tmpa_seq \l_tmpa_tl
        \seq_gpop_left:NN \l_tmpa_seq \l_tmpb_tl
        % \tl_gset_eq:NN \g_tmpa_tl \l_tmpa_tl
        \tl_gset_eq:NN \g_descriptions_description_tl \l_tmpb_tl
        % split l_tmpa_tl at a |, if it exists
        \seq_set_split:NnV \l_tmpb_seq { & } \l_tmpa_tl
        \seq_gpop_left:NN \l_tmpb_seq \g_descriptions_item_tl
        % if the sequence is now empty, set \g_descriptions_subitem_tl to empty
        \seq_if_empty:NTF \l_tmpb_seq {
            \tl_gclear:N \g_descriptions_subitem_tl
        }{
            \seq_gpop_left:NN \l_tmpb_seq \g_descriptions_subitem_tl
        }
        \begin{tikzpicture}[baseline=(text.base),
            divider/.estyle = {
                \l_descriptions_divider_style_tl
            }
        ]
            \node[text~width = \definitionsfirstcolumnlength, align = right, inner~sep = 0pt] (text) {\phantom{|}\definitionsitemstyle{\tl_use:N \g_descriptions_item_tl}};
            % if \g_descriptions_subitem_tl is empty, then we don't need to do anything
            \tl_if_empty:NTF \g_descriptions_subitem_tl {
            }{
                \node[text~width = \definitionsfirstcolumnlength, align = right, inner~sep = 0pt, below = 1ex~of~text.south~east, anchor = north~east] (subtext) {\definitionssubitemstyle{\tl_use:N \g_descriptions_subitem_tl}};
            }
            % get the height of the node, set it to \descriptiontextheight
            \newdimen\descriptiontextheight
            \tl_if_empty:NTF \g_descriptions_subitem_tl {
                \pgfextracty{\descriptiontextheight}{\pgfpointdiff{\pgfpointanchor{text}{south}}{\pgfpointanchor{text}{north}}}
                \dim_gset:Nn \g_descriptions_item_height_dim \descriptiontextheight
            }{
                \pgfextracty{\descriptiontextheight}{\pgfpointdiff{\pgfpointanchor{subtext}{south}}{\pgfpointanchor{text}{north}}}
                \dim_gset:Nn \g_descriptions_item_height_dim \descriptiontextheight
            }
            \ifdim\g_descriptions_item_height_dim<\singlelineheight%
                \pgfmathsetmacro\extent{(\singlelineheight - \g_descriptions_item_height_dim) / 2}%
            \else%
                \pgfmathsetmacro\extent{2pt}%
            \fi%
            \tl_if_empty:NTF \g_descriptions_subitem_tl {
                \draw[thick, shorten ~ < = -\extent*1pt, shorten ~ > = -\extent*1pt, divider] ($(text.north~east) + (1ex, 0)$) -- ($(text.south~east) + (1ex, 0)$);
                \pgfresetboundingbox
                \path[use~as~bounding~box] ($(text.north~west) + (0, \extent*1pt)$) rectangle ($(text.south~east) + (0, -\extent*1pt - 1mm)$);
            }{
                \draw[thick, shorten ~ < = -\extent*1pt, shorten ~ > = -\extent*1pt, divider] ($(text.north~east) + (1ex, 0)$) -- ($(subtext.south~east) + (1ex, 0)$);
                \pgfresetboundingbox
                \path[use~as~bounding~box] ($(text.north~west) + (0, \extent*1pt)$) rectangle ($(subtext.south~east) + (0, -\extent*1pt - 1mm)$);
            }
        \end{tikzpicture} 
        &
        \bool_if:NTF \l_descriptions_pauses_bool {\pause} { }
        \begin{minipage}[t]{\definitionssecondcolumnlength}
            \tl_use:N \g_descriptions_description_tl
        \end{minipage}
        % if the index is less than the number of rows, then add a \\
        \int_compare:nNnTF {#1} < {\g_descriptions_num_rows_int} { 
            \\ 
            % if \l_descriptions_pauses_bool is true, then add a pause
            \bool_if:NTF \l_descriptions_pauses_bool {\pause} { }
        } {}
    }
}


\ExplSyntaxOff